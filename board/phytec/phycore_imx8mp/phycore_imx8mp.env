#include <env/phytec/rauc.env>
#include <env/phytec/overlays.env>
#include <env/phytec/fitboot.env>

bootcmd=
	if test ${dofastboot} = 1; then
		fastboot 0;
	fi;
	run spiprobe;
	if test ${dolegacyboot} = 1; then
		run legacyboot;
	fi;
	bootflow scan -lb;
	if test ${doefiboot} = 1; then
		setenv bootmeths "efi_mgr efi";
		setenv boot_targets "mmc2 mmc1 usb";
		bootflow scan -l;
		bootflow scan -lb;
	fi;
legacyboot=
	if test ${dofastboot} = 1; then
		fastboot 0;
	fi;
	mmc dev ${mmcdev};
	if mmc rescan; then
		if test ${doraucboot} = 1; then
			run raucinit;
		fi;
		if run loadimage; then
			run mmcboot;
		else
			if test ${doraucboot} = 1 || test ${dofitboot} = 1; then
				reset;
			fi;
			run netboot;
		fi;
	fi;
doefiboot=1
bootmeths=script
boot_targets=mmc2 mmc1 ethernet
boot_script_dhcp=boot.scr.uimg
bootenv_addr_r=0x49100000
console=ttymxc0,115200
dofastboot=0
dolegacyboot=0
emmc_dev=2
fastboot_raw_partition_all=0 4194304
fastboot_raw_partition_bootloader=64 8128
fdt_addr_r=0x48000000
fdtfile=CONFIG_DEFAULT_FDT_FILE
fit_fdtconf=conf-imx8mp-phyboard-pollux-rdk.dtb
fdtoverlay_addr_r=0x49000000
image=Image
ipaddr=192.168.3.11
serverip=192.168.3.10
netmask=255.225.255.0
ip_dyn=no
mtdparts=30bb0000.spi:3840k(u-boot),128k(env),128k(env_redund),-(none)
mtdids=nor0=30bb0000.spi
spiprobe=true
kernel_addr_r=0x5A080000
kernel_comp_addr_r=0x60000000
kernel_comp_size=0x2000000
loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile}
mmcargs=
	setenv bootargs console=${console} ${optargs}
	root=/dev/mmcblk${mmcdev}p${mmcroot} ${raucargs} fsck.repair=yes rootwait rw
mmcautodetect=yes
mmc_apply_extensions=
	if test ${no_extensions} = 0; then
		setenv extension_overlay_addr ${fdtoverlay_addr_r};
		setenv extension_overlay_cmd "fatload mmc ${mmcdev}:${mmcpart} ${fdtoverlay_addr_r} ${extension_overlay_name}";
		extension scan;
		extension apply all;
	fi;
mmcboot=
	echo Booting from mmc ...;
	if test ${no_bootenv} = 0; then
		if run mmc_load_bootenv; then
			if test ${dofitboot} = 1; then
				env import -t ${bootenv_addr_r} ${filesize} overlays;
			else
				env import -t ${bootenv_addr_r} ${filesize};
			fi;
		fi;
	fi;
	run mmcargs;
	run fit_test_and_run_boot;
	if run loadfdt; then
		run mmc_apply_overlays;
		run mmc_apply_extensions;
		booti ${loadaddr} - ${fdt_addr_r};
	else
		echo WARN: Cannot load the DT;
	fi;
mmcdev=CONFIG_SYS_MMC_ENV_DEV
mmcpart=1
mmcroot=2
netargs=
	setenv bootargs console=${console} root=/dev/nfs ip=${nfsip} ${optargs}
	nfsroot=${serverip}:${nfsroot},v3,tcp
net_apply_extensions=
	if test ${no_extensions} = 0; then
		setenv extension_overlay_addr ${fdtoverlay_addr_r};
		setenv extension_overlay_cmd "${get_cmd} ${fdtoverlay_addr_r} ${extension_overlay_name}";
		extension scan;
		extension apply all;
	fi;
netboot=
	echo Booting from net ...;
	if test ${ip_dyn} = yes; then
		setenv nfsip dhcp;
		setenv get_cmd dhcp;
	else
		setenv nfsip ${ipaddr}:${serverip}::${netmask}::eth0:on;
		setenv get_cmd tftp;
	fi;
	if test ${no_bootenv} = 0; then
		if run net_load_bootenv; then
			env import -t ${bootenv_addr_r} ${filesize};
		fi;
	fi;
	${get_cmd} ${loadaddr} ${image};
	run netargs;
	if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then
		run net_apply_overlays;
		run net_apply_extensions;
		booti ${loadaddr} - ${fdt_addr_r};
	else
		echo WARN: Cannot load the DT;
	fi;
nfsroot=/srv/nfs
pxefile_addr_r=0x58600000
ramdisk_addr_r=0x5E000000
scriptaddr=0x58500000
script_offset_f=0x400000
script_size_f=0x2000
prepare_mcore=setenv optargs "${optargs} clk-imx8mp.mcore_booted"
sd_dev=1
